version: 2.1
orbs:
  gcp-cli: circleci/gcp-cli@2.4.1
  gcp-gcr: circleci/gcp-gcr@0.15.0

jobs:

  lint:
    docker:
    - image: cimg/python:3.8
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-{{ checksum ".pre-commit-config.yaml" }}-{{ checksum "constraints.txt" }}
      - run:
          name: run linting
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install pre-commit -c constraints.txt
            pre-commit run --all-files
      - save_cache:
          key: v3-{{ checksum ".pre-commit-config.yaml" }}-{{ checksum "constraints.txt" }}
          paths:
            - ~/.cache/pre-commit
            - venv

  savepoints_mpi:
    machine:
      image: ubuntu-2004:202111-02
    parameters:
      backend:
        description: "gt4py backend"
        default: "numpy"
        type: enum
        enum: ["numpy"]
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/key.json
    steps:
      - run: |
          sudo apt-get update && sudo apt-get install -y make \
            python3 \
            python3-pip
      - gcp-cli/install:
        version: 323.0.0
      - run:
          name: gcloud auth
          command: |
            echo $ENCODED_GCR_KEY
            echo $ENCODED_GCR_KEY | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS
            gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
            gcloud auth configure-docker
      - checkout
      - run:
          name: Update Submodules
          command: git submodule update --init
      - run:
          name: save gt4py_version.txt
          command: git submodule status external/gt4py | awk '{print $1;}' > gt4py_version.txt
      - restore_cache:
          keys:
            - v1-gt_cache-{{ checksum "gt4py_version.txt" }}
            - v1-savepoints-{{ checksum "fv3core/Makefile" }}
      - run:
          name: build image
          command: |
            BUILD_ARGS="--progress=plain" make -C fv3core build
      - run:
          name: run tests
          command: |
            TEST_ARGS="--backend=<<parameters.backend>> -v -s" DEV=y make savepoint_tests_mpi
          no_output_timeout: 3h
      - save_cache:
          key: v1-gt_cache-{{ checksum "gt4py_version.txt" }}
          paths:
            - .gt_cache
            - .gt_cache_000000
            - .gt_cache_000001
            - .gt_cache_000002
            - .gt_cache_000003
            - .gt_cache_000004
            - .gt_cache_000005
      - save_cache:
          key: v1-savepoints-{{ checksum "fv3core/Makefile" }}
          paths:
            - fv3core/test_data

  test_util:
    docker:
      - image: cimg/python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Submodules
          command: git submodule update --init
      - restore_cache:
          keys:
            - v2-{{ checksum "util/tox.ini" }}-{{ checksum "constraints.txt" }}-{{ checksum "util/setup.py" }}
      - run:
          name: install tox and MPI
          command: |
            if [ $(python changed_from_main.py util) != false ]; then
              sudo apt-get update
              sudo apt-get install libopenmpi3 libopenmpi-dev
              pip3 install --upgrade setuptools wheel
              python3 -m venv util/venv
              . util/venv/bin/activate
              pip3 install tox -c constraints.txt
            fi
      - run:
          name: run tests
          command: |
            if [ $(python changed_from_main.py util) != false ]; then
              cd util
              . venv/bin/activate
              tox --recreate -e test -e test_no_extras
            fi
      - save_cache:
          key: v2-{{ checksum "util/tox.ini" }}-{{ checksum "constraints.txt" }}
          paths:
            - util/.tox
            - util/venv

  test_driver:
    docker:
      - image: cimg/python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Submodules
          command: git submodule update --init
      - restore_cache:
          keys:
            - v3-driver-{{ checksum "driver/requirements.txt" }}-{{ checksum "constraints.txt" }}-{{ checksum "driver/setup.py" }}
      - run:
          name: install packages
          command: |
            if [ $(python changed_from_main.py driver) != false ]; then
              sudo apt-get update
              sudo apt-get install libopenmpi3 libopenmpi-dev
              cd driver && ./examples/create_venv.sh
            fi
      - run:
          name: run tests
          command: |
            if [ $(python changed_from_main.py driver) != false ]; then
              cd driver
              . venv/bin/activate
              MPIRUN_CALL="mpirun -n 6 --mca btl_vader_single_copy_mechanism none" make test_mpi
            fi
      - save_cache:
          key: v3-driver-{{ checksum "driver/requirements.txt" }}-{{ checksum "constraints.txt" }}-{{ checksum "driver/setup.py" }}
          paths:
            - driver/venv
            - /root/.cache/pip

  test_main:
    docker:
      - image: cimg/python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Submodules
          command: git submodule update --init
      - run:
          name: install MPI
          command: |
              sudo apt-get update
              sudo apt-get install libopenmpi3 libopenmpi-dev
      - restore_cache:
          keys:
            - v1-main-{{ checksum "requirements_dev.txt" }}-{{ checksum "constraints.txt" }}
      - run:
          name: install packages
          command: |
            if [ $(python changed_from_main.py fv3core) != false ]; then
              pip3 install --upgrade setuptools wheel virtualenv
              virtualenv venv
              . venv/bin/activate
              pip3 install -r requirements_dev.txt -c constraints.txt
            fi
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest tests/main
      - save_cache:
          key: v1-main-{{ checksum "requirements_dev.txt" }}-{{ checksum "constraints.txt" }}
          paths:
            - venv

workflows:
  version: 2
  tagged-build:
    jobs:
      - lint:
          filters:
            tags:
              only: /^v.*/
      - savepoints_mpi:
          matrix:
            parameters:
              backend:
                - numpy
          context:
            - GCLOUD_ENCODED_KEY
          filters:
            tags:
              only: /^v.*/
      - test_util:
          filters:
            tags:
              only: /^v.*/
      - test_main:
          filters:
            tags:
              only: /^v.*/
      - test_driver:
          filters:
            tags:
              only: /^v.*/
